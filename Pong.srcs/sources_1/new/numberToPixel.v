`timescale 1ns / 1ps

module numberToPixel(
  input [3:0] number,
  input [2:0] rowNum,
  input [3:0] colNum,
  output reg pixel
);
  reg [15:0] pixels;

  always @(*) begin
    case ({number, rowNum})
      7'b0000000: pixels = 16'b0000000000000000; // ----xxxxxxxx----  
      7'b0000001: pixels = 16'b0000000000000000; // --xx--------xx--
      7'b0000010: pixels = 16'b0000111111110000; // --xx--------xx--
      7'b0000011: pixels = 16'b0011000000001100; // --xx--------xx--
      7'b0000100: pixels = 16'b0011000000001100; // ----xxxxxxxx----
      7'b0000101: pixels = 16'b0011000000001100; //
      7'b0000101: pixels = 16'b0000111111110000; //
      7'b0000101: pixels = 16'b0000000000000000; //

      7'b0001000: pixels = 16'b0000000000000000;
      7'b0001001: pixels = 16'b0000000000000000;
      7'b0001010: pixels = 16'b0000111111000000; // ----xxxxxx------  
      7'b0001011: pixels = 16'b0011000000110000; // --xx------xx----   
      7'b0001100: pixels = 16'b0011001100110000; // --xx--xx--xx----
      7'b0000101: pixels = 16'b0000111100110000; // ----xxxx--xx----  
      7'b0000101: pixels = 16'b0000000011000000; // --------xx------ 
      7'b0000101: pixels = 16'b0000000000000000; //

      7'b0010000: pixels = 16'b0000000000000000;
      7'b0010001: pixels = 16'b0011000000000000; // --xx------------
      7'b0010010: pixels = 16'b0011000000000000; // --xx------------
      7'b0010011: pixels = 16'b0011001100110000; // --xx--xx--xx----
      7'b0010100: pixels = 16'b0011000011110000; // --xx----xxxx----
      7'b0000101: pixels = 16'b0011000000110000; // --xx------xx----
      7'b0000101: pixels = 16'b0000111111000000; // ----xxxxxx------
      7'b0000101: pixels = 16'b0000000000000000;    

      7'b0011000: pixels = 16'b0000000000000000; 
      7'b0011001: pixels = 16'b0000000000000000;
      7'b0011010: pixels = 16'b0000110011000000; // ----xx--xx------
      7'b0011011: pixels = 16'b0011001100110000; // --xx--xx--xx----
      7'b0011100: pixels = 16'b0011000000110000; // --xx------xx----
      7'b0000101: pixels = 16'b0011000000110000; // --xx------xx----
      7'b0000101: pixels = 16'b0011110000110000; // --xxxx----xx----
      7'b0000101: pixels = 16'b0000000000000000;      

      7'b0100000: pixels = 16'b0000000000000000; 
      7'b0100001: pixels = 16'b0000000000001100; // ------------xx--
      7'b0100010: pixels = 16'b0000000000110000; // ----------xx----
      7'b0100011: pixels = 16'b0000111111000000; // ----xxxxxx------
      7'b0100100: pixels = 16'b0011000000000000; // --xx------------
      7'b0000101: pixels = 16'b0011000011000000; // --xx----xx------ 
      7'b0000101: pixels = 16'b0000111111110000; // ----xxxxxxxx----
      7'b0000101: pixels = 16'b0000000000000000; //         

      7'b0101000: pixels = 16'b0000001100110000; // ------xx--xx---- 
      7'b0101001: pixels = 16'b0000111111000000; // ----xxxxxx------
      7'b0101010: pixels = 16'b0000001100110000; // ------xx--xx---- 
      7'b0101011: pixels = 16'b0000111111000000; // ----xxxxxx------
      7'b0101100: pixels = 16'b0011000000000000; // --xx------------
      7'b0000101: pixels = 16'b0011000011000000; // --xx----xx------
      7'b0000101: pixels = 16'b0000111111110000; // ----xxxxxxxx----
      7'b0000101: pixels = 16'b0000000000000000; //        

      7'b0110000: pixels = 16'b0011000000000000; // --xx------------
      7'b0110001: pixels = 16'b0000111111000000; // ----xxxxxx------
      7'b0110010: pixels = 16'b0000000000110000; // ----------xx----
      7'b0110011: pixels = 16'b0011000000110000; // --xx------xx----
      7'b0110100: pixels = 16'b0011111111000000; // --xxxxxxxx------
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //       

      7'b0111000: pixels = 16'b0011001100001100; // --xx--xx----xx--
      7'b0111001: pixels = 16'b1100110011001100; // xx--xx--xx--xx--
      7'b0111010: pixels = 16'b1100000011001100; // xx------xx--xx--
      7'b0111011: pixels = 16'b1100000011001100; // xx------xx--xx--
      7'b0111100: pixels = 16'b1111000011110000; // xxxx----xxxx----   
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //        

      7'b1000000: pixels = 16'b0000000000001100; // ----------xx----
      7'b1000001: pixels = 16'b0000111111110000; // ----xxxxxx------
      7'b1000010: pixels = 16'b0011000000000000; // --xx------------
      7'b1000011: pixels = 16'b0011001100110000; // --xx--xx--xx----
      7'b1000100: pixels = 16'b0000110011110000; // ----xx--xxxx----
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //      

      7'b1001000: pixels = 16'b0000000000001100; // ------------xx--
      7'b1001001: pixels = 16'b0000111111110000; // ----xxxxxxxx----
      7'b1001010: pixels = 16'b0011001100000000; // --xx--xx--------
      7'b1001011: pixels = 16'b0011000011000000; // --xx----xx------
      7'b1001100: pixels = 16'b0000110000110000; // ----xx----xx----
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //
      7'b0000101: pixels = 16'b0000000000000000; //                      
  
      default: pixels = 16'b0000000000000000;
    endcase

    pixel = pixels[15 - colNum];
  end

endmodule